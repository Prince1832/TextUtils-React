{"version":3,"sources":["components/Navbar.js","components/TextFrom.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","classNameName","onClick","togglemode","htmlFor","TextFrom","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","style","backgroundColor","color","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f2d0df8b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\"></Link>*/}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"></Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\"> </Link>*/}\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex mx-5\" role=\"search\">\r\n            <div classNameName=\"form-check form-switch\">\r\n              <div className=\"form-check form-switch\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  onClick={props.togglemode}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    props.mode === \"white\" ? \"black\" : \"white\"\r\n                  }`}\r\n                  htmlFor=\"flexSwitchCheckDefault\">\r\n                  {props.mode === 'white'? 'Enable dark mode': 'Enable light mode'}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\r\n\r\n// Navbar.propTypes = {title: PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = { title: \"set title here\", aboutText: \"About text here\" };\r\n\r\nNavbar.defaultProps = { title: \"set title here\", aboutText: \"About\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextFrom(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked: \" + text)\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\")\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    // console.log(\"Uppercase was clicked: \" + text)\r\n    let newText = \" \";\r\n    setText(newText);\r\n    props.showAlert(\"Your text is cleared\", \"success\")\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    // console.log(\"Uppercase was clicked: \" + text)\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\")\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () =>{\r\n    let text = document.getElementById(\"myBox\")\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"your text is copied\", \"success\")\r\n  }\r\n\r\n  const handleExtraSpaces = () =>{\r\n    let newText = text.split(/ [ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces have been removed from your text\", \"success\")\r\n  }\r\n\r\n  const [text, setText] = useState(\" \");\r\n  // text = \"new text\"; //Wrong way to change the state\r\n  // setText(\"new text\"); //Correct way to change the state\r\n  return (\r\n    <>\r\n      <div className={`container text-${props.mode==='white'?'black':'white'}`}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            id=\"myBox\"\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor: props.mode==='white'?'white':'black', color:props.mode==='white'?'black':'white'}}\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to upper case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\r\n          Convert to lower case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n      <div className={`container my-3 text-${props.mode==='white'?'black':'white'}`} >\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize (props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextFrom from \"./components/TextFrom\";\nimport React, { useState } from 'react'\nimport Alert  from \"./components/Alert\";\n\n// import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('white'); //Whether dark mode is enabled or not \n  const [alert, setAlert] = useState(null)\n \n  const showAlert = (message, type)=>{\n    setAlert ({\n      msg : message,\n      type:  type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    }, 2000)\n  }\n\n\n  const togglemode = ()=>{\n    if(mode === 'white'){\n      setMode('dark')\n      document.body.style.backgroundColor= '#101010';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else{\n      setMode('white')\n      document.body.style.backgroundColor= '#DCDCDC';\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  // <>\n  // <h1> This is me </h1>\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React with arham\n\n  //     </a>\n  //   </header>\n  // </div>\n\n  return (\n    <>\n    \n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n      {/* <Navbar/> */}\n\n      {/* <Routes> // This way is incorrect\n      <Navbar title=\"TextUtils\" mode={mode} togglemode = {togglemode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\"> \n        <TextFrom showAlert = {showAlert} heading=\"Enter the text to analyze below \" mode={mode}/>\n        <About/>\n      </div>\n      </Routes>\n       */}\n   \n       {/* <Router>  */}\n       <Navbar title=\"TextUtils\" mode={mode} togglemode = {togglemode}/>\n       <Alert alert={alert}/>\n       <div className = \"container\">\n        {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About/>} /> */}\n          {/* <Route path=\"/\" element={ <TextFrom showAlert = {showAlert} heading=\"Enter the text to analyze below \" mode={mode}/>}/> */}\n        {/* </Routes> */}\n        <TextFrom showAlert = {showAlert} heading=\"Enter the text to analyze below \" mode={mode}/>\n       </div>\n       {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}